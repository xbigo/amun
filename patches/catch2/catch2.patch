diff --git a/src/catch2/catch_test_case_info.hpp b/src/catch2/catch_test_case_info.hpp
index 6cfc2aaf..5e004d37 100644
--- a/src/catch2/catch_test_case_info.hpp
+++ b/src/catch2/catch_test_case_info.hpp
@@ -17,6 +17,7 @@
 
 #include <string>
 #include <vector>
+#include <cstdint>
 
 #ifdef __clang__
 #pragma clang diagnostic push
@@ -44,7 +45,7 @@ namespace Catch {
 
     class ITestInvoker;
 
-    enum class TestCaseProperties : uint8_t {
+    enum class TestCaseProperties : std::uint8_t {
         None = 0,
         IsHidden = 1 << 1,
         ShouldFail = 1 << 2,
diff --git a/src/catch2/internal/catch_string_manip.hpp b/src/catch2/internal/catch_string_manip.hpp
index dc58a336..c3da19d1 100644
--- a/src/catch2/internal/catch_string_manip.hpp
+++ b/src/catch2/internal/catch_string_manip.hpp
@@ -13,6 +13,7 @@
 #include <string>
 #include <iosfwd>
 #include <vector>
+#include <cstdint>
 
 namespace Catch {
 
diff --git a/src/catch2/internal/catch_xmlwriter.cpp b/src/catch2/internal/catch_xmlwriter.cpp
index 93758cba..32dc55a9 100644
--- a/src/catch2/internal/catch_xmlwriter.cpp
+++ b/src/catch2/internal/catch_xmlwriter.cpp
@@ -13,6 +13,7 @@
 
 #include <iomanip>
 #include <type_traits>
+#include <cstdint>
 
 namespace Catch {
 
@@ -31,7 +32,7 @@ namespace {
         CATCH_INTERNAL_ERROR("Invalid multibyte utf-8 start byte encountered");
     }
 
-    uint32_t headerValue(unsigned char c) {
+    std::uint32_t headerValue(unsigned char c) {
         if ((c & 0xE0) == 0xC0) {
             return c & 0x1F;
         }
@@ -145,7 +146,7 @@ namespace {
                 // The next encBytes bytes must together be a valid utf-8
                 // This means: bitpattern 10XX XXXX and the extracted value is sane (ish)
                 bool valid = true;
-                uint32_t value = headerValue(c);
+                std::uint32_t value = headerValue(c);
                 for (std::size_t n = 1; n < encBytes; ++n) {
                     unsigned char nc = static_cast<unsigned char>(m_str[idx + n]);
                     valid &= ((nc & 0xC0) == 0x80);
